#!/bin/bash
# 
# Copyright (c) 2017-2018, SyLabs, Inc. All rights reserved.
# Copyright (c) 2017, SingularityWare, LLC. All rights reserved.
#
# This software is licensed under a 3-clause BSD license.  Please
# consult LICENSE file distributed with the sources of this project regarding
# your rights to use or distribute this software. 
#
# 


## Basic sanity
if [ -z "$SINGULARITY_libexecdir" ]; then
    echo "Could not identify the Singularity libexecdir."
    exit 1
fi

## Load functions
if [ -f "$SINGULARITY_libexecdir/singularity/functions" ]; then
    . "$SINGULARITY_libexecdir/singularity/functions"
else
    echo "Error loading functions: $SINGULARITY_libexecdir/singularity/functions"
    exit 1
fi

if [ -f "${HOME:-}/.singularity-init" ]; then
    . "${HOME:-}/.singularity-init"
fi

if ! USERID=`id -ru`; then
    message ERROR "Could not ascertain user ID\n"
    exit 255
fi

message 2 "Evaluating args: '$*'\n"

while true; do
    case ${1:-} in
        -h|--help|help)
            exec "$SINGULARITY_libexecdir/singularity/cli/help.exec" "$SINGULARITY_COMMAND"
        ;;
        -w|--writable)
            shift
            SINGULARITY_WRITABLE=1
            export SINGULARITY_WRITABLE
        ;;
        -H|--home)
            shift
            SINGULARITY_HOME="$1"
            export SINGULARITY_HOME
            shift
        ;;
        -W|--wdir|--workdir|--workingdir)
            shift
            SINGULARITY_WORKDIR="$1"
            export SINGULARITY_WORKDIR
            shift
        ;;
        -S|--scratchdir|--scratch-dir|--scratch)
            shift
            SINGULARITY_SCRATCHDIR="$1,${SINGULARITY_SCRATCHDIR:-}"
            export SINGULARITY_SCRATCHDIR
            shift
        ;;
        -B|--bind)
            shift
            SINGULARITY_BINDPATH="${SINGULARITY_BINDPATH:-},${1:-}"
            export SINGULARITY_BINDPATH
            shift
        ;;
        -c|--contain)
            shift
            SINGULARITY_CONTAIN=1
            export SINGULARITY_CONTAIN
        ;;
        -e|--cleanenv)
            shift
            SINGULARITY_CLEANENV=1
            export SINGULARITY_CLEANENV
        ;;
        -o|--overlay)
            shift
            SINGULARITY_OVERLAYIMAGE="${1:-}"
            export SINGULARITY_OVERLAYIMAGE
            shift

            if [ ! -e "${SINGULARITY_OVERLAYIMAGE:-}" ]; then
                message ERROR "Overlay image must be a file or directory!\n"
                ABORT 255
            fi
        ;;
        -n|--nv)
            shift
            for i in `ldconfig -p | grep -E "/libnv|/libcuda|/libEGL|/libGL|/libnvcu|/libvdpau|/libOpenCL|/libOpenGL"`; do
                if [ -f "$i" ]; then
                    message 2 "Found NV library: $i\n"
                    if [ -z "${SINGULARITY_CONTAINLIBS:-}" ]; then
                        SINGULARITY_CONTAINLIBS="$i"
                    else
                        SINGULARITY_CONTAINLIBS="$SINGULARITY_CONTAINLIBS,$i"
                    fi
                fi
            done
            if [ -z "${SINGULARITY_CONTAINLIBS:-}" ]; then
                message WARN "Could not find any Nvidia libraries on this host!\n";
            else
                export SINGULARITY_CONTAINLIBS
            fi
            if NVIDIA_SMI=`which nvidia-smi`; then
                if [ -n "${SINGULARITY_BINDPATH:-}" ]; then
                    SINGULARITY_BINDPATH="${SINGULARITY_BINDPATH},${NVIDIA_SMI}"
                else
                    SINGULARITY_BINDPATH="${NVIDIA_SMI}"
                fi
                export SINGULARITY_BINDPATH
            else
                message WARN "Could not find the Nvidia SMI binary to bind into container\n"
            fi
        ;;
        -n|--net)
            shift
            SINGULARITY_UNSHARE_NET=1
            export SINGULARITY_UNSHARE_NET
        ;;
        -*)
            message ERROR "Unknown option: ${1:-}\n"
            exit 1
        ;;
        *)
            break
        ;;
    esac
done

if [ -f "$SINGULARITY_libexecdir/singularity/cli/$SINGULARITY_COMMAND.info" ]; then
    . "$SINGULARITY_libexecdir/singularity/cli/$SINGULARITY_COMMAND.info"
else
    message ERROR "Could not find the info file for: $SINGULARITY_COMMAND\n"
    ABORT 255
fi


if [ -z "${SINGULARITY_IMAGE:-}" ]; then
    SINGULARITY_IMAGE="${1:-}"
    export SINGULARITY_IMAGE
    shift
fi

if [ -z "${SINGULARITY_DAEMON_NAME:-}" ]; then
    SINGULARITY_DAEMON_NAME="${1:-}"
    export SINGULARITY_DAEMON_NAME
    shift
fi

if [ -z "${SINGULARITY_IMAGE:-}" ] || [ -z "${SINGULARITY_DAEMON_NAME:-}" ]; then
    if [ -n "${USAGE:-}" ]; then
        echo "USAGE: $USAGE"
    else
        echo "To see usage summary type: singularity help $SINGULARITY_COMMAND"
    fi
    exit 0
fi

ALLOWED_DAEMON_CHARS='^[a-zA-Z0-9._-]+$'
if ! [[ "$SINGULARITY_DAEMON_NAME" =~ $ALLOWED_DAEMON_CHARS ]]; then
    message ERROR "Illegal characters in daemon name: $SINGULARITY_DAEMON_NAME\n"
    ABORT 255
fi

SINGULARITY_DAEMON_START=1
export SINGULARITY_DAEMON_START

singularity_daemon_file "$SINGULARITY_DAEMON_NAME"

INSTANCE_PROC_NAME="singularity-instance: $USER [$SINGULARITY_DAEMON_NAME]"

# cleanup by testing if daemons are alive
DAEMONS=$(singularity_daemon_glob '*' | sort | uniq)

for i in $DAEMONS; do
    if [ -f "$i" ]; then
        if [ ! -s "$i" ]; then
            rm "$i"
            continue
        fi
        FILE_NAME=`basename "$i"`
        DAEMON_NAME=${FILE_NAME##*-}
        . "$i"
        if [ -n "${DAEMON_PID:-}" ]; then
            PROC_CMDLINE="/proc/${DAEMON_PID:-}/cmdline"
            if [ -e "$PROC_CMDLINE" ]; then
                PROGNAME=$(<"${PROC_CMDLINE}" tr -d \\0)
                if [ "${PROGNAME}" == "${INSTANCE_PROC_NAME}" ]; then
                    message ERROR "A daemon process is already running with this name: ${DAEMON_NAME}\n"
                    ABORT 255
                fi
                if [ "${PROGNAME}" != "singularity-instance: $USER [$DAEMON_NAME]" ]; then
                    message WARN "Removing stale daemon file: $i\n"
                    rm -f "$i"
                fi
            else
                message WARN "Removing stale daemon file: $i\n"
                rm -f "$i"
            fi
        else
            message WARN "Removing invalid daemon file: $i\n"
            rm -f "$i"
        fi
    fi
done

if [ -f "$SINGULARITY_sysconfdir/singularity/init" ]; then
    . "$SINGULARITY_sysconfdir/singularity/init"
fi

if [ -x "$SINGULARITY_libexecdir/singularity/image-handler.sh" ]; then
    . "$SINGULARITY_libexecdir/singularity/image-handler.sh"
fi

if [ -z "${SINGULARITY_NOSUID:-}" -a -u "$SINGULARITY_libexecdir/singularity/bin/start-suid" ]; then
    exec -a "$INSTANCE_PROC_NAME" "$SINGULARITY_libexecdir/singularity/bin/start-suid" "$@" <&0
elif [ -x "$SINGULARITY_libexecdir/singularity/bin/start" ]; then
    exec -a "$INSTANCE_PROC_NAME" "$SINGULARITY_libexecdir/singularity/bin/start" "$@" <&0
else
    message ERROR "Could not locate the Singularity binary: $SINGULARITY_libexecdir/singularity/bin/start\n"
    exit 1
fi

