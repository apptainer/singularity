#!/bin/bash
#
# Copyright (c) 2017, SingularityWare, LLC. All rights reserved.
# Copyright (c) 2017, Vanessa Sochat. All rights reserved.
#
# See the COPYRIGHT.md file at the top-level directory of this distribution and at
# https://github.com/singularityware/singularity/blob/master/COPYRIGHT.md.
#
# This file is part of the Singularity Linux container project. It is subject to the license
# terms in the LICENSE.md file found in the top-level directory of this distribution and
# at https://github.com/singularityware/singularity/blob/master/LICENSE.md. No part
# of Singularity, including this file, may be copied, modified, propagated, or distributed
# except according to the terms contained in the LICENSE.md file.

 

## Basic sanity
if [ -z "$SINGULARITY_libexecdir" ]; then
    echo "Could not identify the Singularity libexecdir."
    exit 1
fi

## Load functions
if [ -f "$SINGULARITY_libexecdir/singularity/functions" ]; then
    . "$SINGULARITY_libexecdir/singularity/functions"
else
    echo "Error loading functions: $SINGULARITY_libexecdir/singularity/functions"
    exit 1
fi

while true; do
    case ${1:-} in
        -h|--help|help)
            exec "$SINGULARITY_libexecdir/singularity/cli/help.exec" "$SINGULARITY_COMMAND"
        ;;
        -n|--name|name)
            shift
            SHUB_CONTAINERNAME="${1:-}"
            export SHUB_CONTAINERNAME
            shift
        ;;
        -C|--commit|commit)
            shift
            if [ -z "${SINGULARITY_IMAGE+x}" ]; then
                SHUB_NAMEBYCOMMIT="yes"
                unset SHUB_NAMEBYHASH
                export SHUB_NAMEBYCOMMIT
            fi 
        ;;
        -H|--hash|hash)
            shift
            if [ -z "${SINGULARITY_IMAGE+x}" ]; then
                if [ -z "${SHUB_NAMEBYCOMMIT+x}" ]; then
                    SHUB_NAMEBYHASH="yes"
                    export SHUB_NAMEBYHASH
                fi
            fi 
        ;;
        -s|--size)
            shift
            SINGULARITY_IMAGESIZE="${1:-}"
            export SINGULARITY_IMAGESIZE
            shift
        ;;
        -F|--force)
            shift
            OVERWRITE=1
        ;;
        -*)
            message ERROR "Unknown option: ${1:-}\n"
            exit 1
        ;;
        *)
            break
        ;;
    esac
done


if [ -f "$SINGULARITY_libexecdir/singularity/cli/$SINGULARITY_COMMAND.info" ]; then
    . "$SINGULARITY_libexecdir/singularity/cli/$SINGULARITY_COMMAND.info"
else
    message ERROR "Could not find the info file for: $SINGULARITY_COMMAND\n"
    ABORT 255
fi

if [ -z "${1:-}" ]; then
    if [ -n "${USAGE:-}" ]; then
        echo "USAGE: $USAGE"
    else
        echo "To see usage summary type: singularity help $SINGULARITY_COMMAND"
    fi
    exit 0
fi


RETVAL=0
SINGULARITY_CONTAINER="${1:-}"
if ! SINGULARITY_CONTENTS=`mktemp ${TMPDIR:-/tmp}/.singularity-layerfile.XXXXXX`; then
    message ERROR "Failed to create temporary directory\n"
    ABORT 255
fi

# If cache is set, set pull folder to it (first priority)
if [ -n "${SINGULARITY_CACHEDIR:-}" ]; then
    SINGULARITY_PULLFOLDER="$SINGULARITY_CACHEDIR"
else
    # Only set the pull folder to be $PWD if not set by user
    if [ ! -n "${SINGULARITY_PULLFOLDER:-}" ]; then
        SINGULARITY_PULLFOLDER="."
    fi
fi
shift

export SINGULARITY_CONTAINER SINGULARITY_PULLFOLDER SINGULARITY_CONTENTS

case "$SINGULARITY_CONTAINER" in
    docker://*)

        if [ -z "${SINGULARITY_IMAGE:-}" ]; then

            # If name given, use that
            if [ -n "${SHUB_CONTAINERNAME:-}" ]; then
                SINGULARITY_IMAGE=`basename "$SHUB_CONTAINERNAME"`   
            else
                SINGULARITY_IMAGE=`basename "$SINGULARITY_CONTAINER.simg" | sed -e 's/:/-/g'`
            fi

            SINGULARITY_IMAGE="$SINGULARITY_PULLFOLDER/$SINGULARITY_IMAGE"
            message 3 "Singularity Image: $SINGULARITY_IMAGE"
            export SINGULARITY_IMAGE
        fi
 
         message WARNING "pull for Docker Hub is not guaranteed to produce the\n"
         message WARNING "same image on repeated pull. Use Singularity Registry\n"
         message WARNING "(shub://) to pull exactly equivalent images.\n"
       
        if [ -n "${SINGULARITY_IMAGESIZE:-}" ]; then
            message WARNING "Using the --size option when building from Docker Hub is deprecated.\n"
            message WARNING "Container will be sized appropriately for Docker image.\n"
        fi

         if [ -f "$SINGULARITY_IMAGE" ]; then
            if [ -n "${OVERWRITE:-}" ]; then
                message 2 "Removing existing file\n"
                rm -f "$SINGULARITY_IMAGE"
            else
                message ERROR "Image file exists, not overwriting.\n"
                exit 1
            fi
        fi

         if [ -x "${SINGULARITY_bindir}/singularity" ]; then
             ${SINGULARITY_bindir}/singularity build ${SINGULARITY_IMAGE} ${SINGULARITY_CONTAINER}
             RETVAL=$?
         else
             message ERROR "Could not locate the Singularity binary: $SINGULARITY_home/singularity\n"
             exit 1
         fi
    ;;

    shub://*)
        
        eval_abort $SINGULARITY_libexecdir/singularity/python/pull.py
        RETVAL=$?

        SINGULARITY_IMAGE=`cat $SINGULARITY_CONTENTS`
    ;;
    *)
        message ERROR "pull is only supported for shub URIs\n"
        exit 255
    ;;
esac

rm -f "$SINGULARITY_CONTENTS"

if [ $RETVAL -eq 0 -a -f "$SINGULARITY_IMAGE" ]; then
    chmod +x "$SINGULARITY_IMAGE"
    echo "Done. Container is at: $SINGULARITY_IMAGE"
else
    message ERROR "pulling container failed!\n"
fi

exit $RETVAL
