#!/bin/bash
# 
# Copyright (c) 2017, SingularityWare, LLC. All rights reserved.
#
# This software is licensed under a 3-clause BSD license.  Please
# consult LICENSE file distributed with the sources of this project regarding
# your rights to use or distribute this software. 
#
# 


## Basic sanity
if [ -z "$SINGULARITY_libexecdir" ]; then
    echo "Could not identify the Singularity libexecdir."
    exit 1
fi

## Load functions
if [ -f "$SINGULARITY_libexecdir/singularity/functions" ]; then
    . "$SINGULARITY_libexecdir/singularity/functions"
else
    echo "Error loading functions: $SINGULARITY_libexecdir/singularity/functions"
    exit 1
fi

if [ -f "${HOME:-}/.singularity-init" ]; then
    . "${HOME:-}/.singularity-init"
fi

if ! USERID=`id --real --user`; then
    message ERROR "Could not ascertain user ID\n"
    exit 255
fi

message 2 "Evaluating args: '$*'\n"

while true; do
    case ${1:-} in
        -h|--help|help)
            if [ -e "$SINGULARITY_libexecdir/singularity/cli/$SINGULARITY_COMMAND.help" ]; then
                cat "$SINGULARITY_libexecdir/singularity/cli/$SINGULARITY_COMMAND.help"
            else
                message ERROR "No help exists for this command\n"
                exit 1
            fi
            exit
        ;;
        -s|--shell)
            shift
            SINGULARITY_SHELL="${1:-}"
            export SINGULARITY_SHELL
            shift
        ;;
        -u|--user)
            SINGULARITY_NOSUID=1
            export SINGULARITY_NOSUID
            shift
        ;;
        -w|--writable)
            shift
            SINGULARITY_WRITABLE=1
            export SINGULARITY_WRITABLE
        ;;
        -H|--home)
            shift
            SINGULARITY_HOME="$1"
            export SINGULARITY_HOME
            shift
        ;;
        -W|--wdir|--workdir|--workingdir)
            shift
            SINGULARITY_WORKDIR="$1"
            export SINGULARITY_WORKDIR
            shift
        ;;
        -S|--scratchdir|--scratch-dir|--scratch)
            shift
            SINGULARITY_SCRATCHDIR="$1,${SINGULARITY_SCRATCHDIR:-}"
            export SINGULARITY_SCRATCHDIR
            shift
        ;;
        -B|--bind)
            shift
            SINGULARITY_BINDPATH="${SINGULARITY_BINDPATH:-},${1:-}"
            export SINGULARITY_BINDPATH
            shift
        ;;
        -c|--contain)
            shift
            SINGULARITY_CONTAIN=1
            export SINGULARITY_CONTAIN
        ;;
        -e|--cleanenv)
            shift
            SINGULARITY_CLEANENV=1
            export SINGULARITY_CLEANENV
        ;;
        --pwd)
            shift
            SINGULARITY_TARGET_PWD="$1"
            export SINGULARITY_TARGET_PWD
            shift
        ;;
        -n|--nv)
            shift
            for i in `ldconfig -p | grep -E "/libnv|/libcuda|/libEGL|/libGL|/libnvcu|/libvdpau|/libOpenCL|/libOpenGL"`; do
                if [ -f "$i" ]; then
                    message 2 "Found NV library: $i\n"
                    if [ -z "${SINGULARITY_CONTAINLIBS:-}" ]; then
                        SINGULARITY_CONTAINLIBS="$i"
                    else
                        SINGULARITY_CONTAINLIBS="$SINGULARITY_CONTAINLIBS,$i"
                    fi
                fi
            done
            if [ -z "${SINGULARITY_CONTAINLIBS:-}" ]; then
                message WARN "Could not find any Nvidia libraries on this host!\n";
            else
                export SINGULARITY_CONTAINLIBS
            fi
            if NVIDIA_SMI=`which nvidia-smi`; then
                if [ -n "${SINGULARITY_BINDPATH:-}" ]; then
                    SINGULARITY_BINDPATH="${SINGULARITY_BINDPATH},${NVIDIA_SMI}"
                else
                    SINGULARITY_BINDPATH="${NVIDIA_SMI}"
                fi
                export SINGULARITY_BINDPATH
            else
                message WARN "Could not find the Nvidia SMI binary to bind into container\n"
            fi
        ;;
        -*)
            message ERROR "Unknown option: ${1:-}\n"
            exit 1
        ;;
        *)
            break;
        ;;
    esac
done


if [ -z "${SINGULARITY_IMAGE:-}" ]; then
    SINGULARITY_IMAGE="${1:-}"
    export SINGULARITY_IMAGE
    shift
fi

if [ -z "${SINGULARITY_DAEMON_NAME:-}" ]; then
    SINGULARITY_DAEMON_NAME="${1:-}"
    export SINGULARITY_DAEMON_NAME
    shift
fi

SINGULARITY_DAEMON_START=1
export SINGULARITY_DAEMON_START

SINGULARITY_DAEMON_FILE=`singularity_daemon_file`
export SINGULARITY_DAEMON_FILE

if [ -z "${SINGULARITY_IMAGE:-}" ] || [ -z "${SINGULARITY_DAEMON_NAME:-}" ]; then
    if [ -e "$SINGULARITY_libexecdir/singularity/cli/$SINGULARITY_COMMAND.help" ]; then
        head -n 1 "$SINGULARITY_libexecdir/singularity/cli/$SINGULARITY_COMMAND.help"
    else
        message ERROR "To see usage summary, try: singularity help $SINGULARITY_COMMAND\n"
    fi
    exit 0
fi

if [ -f "$SINGULARITY_sysconfdir/singularity/init" ]; then
    . "$SINGULARITY_sysconfdir/singularity/init"
fi


if [ -x "$SINGULARITY_libexecdir/singularity/image-handler.sh" ]; then
    . "$SINGULARITY_libexecdir/singularity/image-handler.sh"
fi


if [ -z "${SINGULARITY_NOSUID:-}" -a -u "$SINGULARITY_libexecdir/singularity/bin/start-suid" ]; then
    exec "$SINGULARITY_libexecdir/singularity/bin/start-suid" "$@" <&0
elif [ -x "$SINGULARITY_libexecdir/singularity/bin/start" ]; then
    exec "$SINGULARITY_libexecdir/singularity/bin/start" "$@" <&0
else
    message ERROR "Could not locate the Singularity binary: $SINGULARITY_libexecdir/singularity/bin/start\n"
    exit 1
fi

