version: 2.1

defaults: &defaults
  working_directory: /go/singularity

jobs:
  get_source:
    <<: *defaults
    docker:
      - image: sylabsio/golang:1.12.7-stretch
    steps:
      - checkout
      - persist_to_workspace:
          root: /go
          paths:
            - singularity

  cache_go_mod:
    <<: *defaults
    docker:
      - image: sylabsio/golang:1.12.7-stretch
    steps:
      - attach_workspace:
          at: /go
      - restore_cache:
          keys:
            - go-mod-{{ checksum "go.sum" }}
      - run:
          name: Check vendor/ module is up-to-date
          command: scripts/check-vendor
      - save_cache:
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - '/go/pkg/mod'

  go112-stretch:
    <<: *defaults
    docker:
      - image: sylabsio/golang:1.12.7-stretch
    steps:
      - attach_workspace:
          at: /go
      - run:
          name: Build Singularity
          command: |-
            ./mconfig -v -p /usr/local
            make -j$(nproc) -C ./builddir all
      - run:
          name: Check code
          command: |-
            make -j$(nproc) -C ./builddir check

  go112-alpine:
    <<: *defaults
    docker:
      - image: sylabsio/golang:1.12.7-alpine
    steps:
      - attach_workspace:
          at: /go
      - run:
          name: Build Singularity
          command: |-
            ./mconfig -v -p /usr/local
            make -j$(nproc) -C ./builddir all
      - run:
          name: Check code
          command: |-
            make -j$(nproc) -C ./builddir check

  go112-macos:
    macos:
      xcode: "10.2.0"
    working_directory: /Users/distiller/go/src/github.com/sylabs/singularity
    steps:
      - checkout
      - run:
          name: Setup environment
          command: |-
            echo 'export GOPATH=$HOME/go'      >> $BASH_ENV
            echo 'export GOROOT=/usr/local/go' >> $BASH_ENV
            echo 'export PATH=$GOPATH/bin:$GOROOT/bin:$PATH' >> $BASH_ENV
      - run:
          name: Update Go to 1.12.7
          working_directory: /tmp
          command: |-
            curl -LO https://dl.google.com/go/go1.12.7.darwin-amd64.tar.gz
            sudo rm -rf /usr/local/go
            sudo tar -C /usr/local -xzf go1.12.7.darwin-amd64.tar.gz
            sudo ln -s /usr/local/go/bin/go /usr/local/bin/go
      - run:
          name: Build Singularity
          command: |-
            ./mconfig -v -p /usr/local
            make -j$(sysctl -n hw.logicalcpu) -C ./builddir all
      - run:
          name: Check code
          command: |-
            make -j$(sysctl -n hw.logicalcpu) -C ./builddir check

  unit_tests:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - attach_workspace:
          at: ~/go
      - run:
          name: Setup environment
          command: |-
            echo 'export GOPATH=$HOME/go' >> $BASH_ENV
            echo 'export GOROOT=/usr/local/go' >> $BASH_ENV
            echo 'export GOBIN=$HOME/go/bin' >> $BASH_ENV
            echo 'export PATH=$GOPATH/bin:$GOBIN:$GOROOT/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin' >> $BASH_ENV
      - run:
          name: Update Go to 1.12.7
          working_directory: /tmp
          command: |-
            wget https://dl.google.com/go/go1.12.7.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go
            sudo tar -C /usr/local -xzf go1.12.7.linux-amd64.tar.gz
            sudo ln -s /usr/local/go/bin/go /usr/local/bin/go
            sudo chown -R circleci:circleci ~/go
      - run:
          name: Fetch deps
          working_directory: /tmp
          command: |-
            mkdir -p ${GOBIN}
            # https://discuss.circleci.com/t/could-not-get-lock-var-lib-apt-lists-lock/28337/4
            sudo killall -9 apt-get || true && \
            sudo apt-get update -y && \
            sudo apt-get install -f -y build-essential libssl-dev uuid-dev libgpgme11-dev squashfs-tools libseccomp-dev
      - run:
          name: Build and Install Singularity
          command: |-
            cd $HOME/go/singularity
            ./mconfig -v -p /usr/local --without-network
            make -j$(nproc) -C ./builddir all
            sudo make -C ./builddir install
      - run:
          name: Run unit tests
          command: |-
            cd $HOME/go/singularity
            make -j$(nproc) -C ./builddir unit-test

  e2e_tests:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - attach_workspace:
          at: ~/go
      - run:
          name: Check changes
          command: |-
            cd $HOME/go/singularity

            # Skip if there were no changes to the e2e or vendor directories and the branch is not master
            if [[ ! $(git --no-pager diff --name-only HEAD origin/master | grep -e "^e2e" -e "^vendor") && "$CIRCLE_BRANCH" != "master" ]]; then
              echo "Skipping e2e tests"
              circleci step halt
            fi
      - run:
          name: Setup environment
          command: |-
            echo 'export GOPATH=$HOME/go' >> $BASH_ENV
            echo 'export GOROOT=/usr/local/go' >> $BASH_ENV
            echo 'export GOBIN=$HOME/go/bin' >> $BASH_ENV
            echo 'export SINGULARITY_E2E=1' >> $BASH_ENV
            echo 'export PATH=$GOPATH/bin:$GOBIN:$GOROOT/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin' >> $BASH_ENV
      - run:
          name: Update Go to 1.12.7
          working_directory: /tmp
          command: |-
            wget https://dl.google.com/go/go1.12.7.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go
            sudo tar -C /usr/local -xzf go1.12.7.linux-amd64.tar.gz
            sudo ln -s /usr/local/go/bin/go /usr/local/bin/go
            sudo chown -R circleci:circleci ~/go
      - run:
          name: Fetch deps
          working_directory: /tmp
          command: |-
            mkdir -p ${GOBIN}
            # https://discuss.circleci.com/t/could-not-get-lock-var-lib-apt-lists-lock/28337/4
            sudo killall -9 apt-get || true && \
            sudo apt-get update -y && \
            sudo apt-get install -y build-essential libssl-dev uuid-dev libgpgme11-dev squashfs-tools libseccomp-dev cryptsetup
      - run:
          name: Build and Install singularity
          command: |-
            cd $HOME/go/singularity
            ./mconfig -v -p /usr/local
            make -j$(nproc) -C ./builddir all
            sudo make -C ./builddir install
      - run:
          name: Run E2E tests
          no_output_timeout: 45m
          command: |-
            cd $HOME/go/singularity
            make -C ./builddir integration-test e2e-test

workflows:
  version: 2
  build_and_test:
    jobs:
      - get_source
      - cache_go_mod:
          requires:
            - get_source
      - go112-stretch:
          requires:
            - cache_go_mod
      - go112-alpine:
          requires:
            - cache_go_mod
      - go112-macos:
          requires:
            - get_source
      - unit_tests:
          requires:
            - get_source
      - e2e_tests:
          requires:
            - get_source
