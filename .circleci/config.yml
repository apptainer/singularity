version: 2.0

defaults: &defaults
  working_directory: /go/src/github.com/sylabs/singularity

jobs:
  get_source:
    <<: *defaults
    docker:
      - image: sylabsio/golang:1.11-stretch
    steps:
      - checkout
      - persist_to_workspace:
          root: /go
          paths:
            - src/github.com/sylabs/singularity

  go1.10-stretch:
    <<: *defaults
    docker:
      - image: sylabsio/golang:1.10-stretch
    steps:
      - attach_workspace:
          at: /go
      - run:
          name: Build Singularity
          command: |-
            ./mconfig -p /usr/local
            make -j$(nproc) -C ./builddir all

  go1.11-stretch:
    <<: *defaults
    docker:
      - image: sylabsio/golang:1.11-stretch
    steps:
      - attach_workspace:
          at: /go
      - run:
          name: Build Singularity
          command: |-
            ./mconfig -p /usr/local
            make -j$(nproc) -C ./builddir all
      - run:
          name: Check code
          command: |-
            curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.15.0
            make -j$(nproc) -C ./builddir check

  go1.11-alpine:
    <<: *defaults
    docker:
      - image: sylabsio/golang:1.11-alpine
    steps:
      - attach_workspace:
          at: /go
      - run:
          name: Build Singularity
          command: |-
            ./mconfig -p /usr/local
            make -j$(nproc) -C ./builddir all
      - run:
          name: Check code
          command: |-
            curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.15.0
            make -j$(nproc) -C ./builddir check

  go1.11-macos:
    macos:
      xcode: "10.2.0"
    working_directory: /Users/distiller/go/src/github.com/sylabs/singularity
    steps:
      - checkout
      - run:
          name: Setup environment
          command: |-
            echo 'export GOPATH=$HOME/go'        >> $BASH_ENV
            echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
      - run:
          name: Install dependencies
          command: brew install go
      - run:
          name: Build Singularity
          command: |-
            ./mconfig -p /usr/local
            make -j$(sysctl -n hw.physicalcpu) -C ./builddir all
      - run:
          name: Check code
          command: |-
            curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.15.0
            make -j$(sysctl -n hw.physicalcpu) -C ./builddir check

  unit_tests:
    machine: true
    steps:
      - attach_workspace:
          at: ~/go
      - run:
          name: Setup environment
          command: |-
            echo 'export  GOPATH=$HOME/go' >> $BASH_ENV
            echo 'export  GOROOT=/usr/local/go' >> $BASH_ENV
            echo 'export  GOBIN=$HOME/go/bin' >> $BASH_ENV
            echo 'export PATH=$GOPATH/bin:$GOBIN:$GOROOT/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin' >> $BASH_ENV
      - run:
          name: Update Go to 1.11
          working_directory: /tmp
          command: |-
            wget https://dl.google.com/go/go1.11.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go
            sudo tar -C /usr/local -xzf go1.11.linux-amd64.tar.gz
            sudo ln -s /usr/local/go/bin/go /usr/local/bin/go
            sudo chown -R circleci:circleci ~/go
      - run:
          name: Fetch deps
          working_directory: /tmp
          command: |-
            mkdir -p ${GOBIN}
            sudo apt-get update -y && sudo apt-get install -y build-essential libssl-dev uuid-dev libgpgme11-dev squashfs-tools libseccomp-dev
      - run:
          name: Build and Install Singularity
          command: |-
            cd $HOME/go/src/github.com/sylabs/singularity
            ./mconfig -p /usr/local --without-network
            make -j$(nproc) -C ./builddir all
            sudo make -C ./builddir install
      - run:
          name: Run unit tests
          command: |-
            cd $HOME/go/src/github.com/sylabs/singularity
            make -j$(nproc) -C ./builddir unit-test

  integration_tests:
    machine: true
    steps:
      - attach_workspace:
          at: ~/go
      - run:
          name: Setup environment
          command: |-
            echo 'export  GOPATH=$HOME/go' >> $BASH_ENV
            echo 'export  GOROOT=/usr/local/go' >> $BASH_ENV
            echo 'export  GOBIN=$HOME/go/bin' >> $BASH_ENV
            echo 'export  GOCACHE=off' >> $BASH_ENV
            echo 'export PATH=$GOPATH/bin:$GOBIN:$GOROOT/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin' >> $BASH_ENV
      - run:
          name: Update Go to 1.11
          working_directory: /tmp
          command: |-
            wget https://dl.google.com/go/go1.11.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go
            sudo tar -C /usr/local -xzf go1.11.linux-amd64.tar.gz
            sudo ln -s /usr/local/go/bin/go /usr/local/bin/go
            sudo chown -R circleci:circleci ~/go
      - run:
          name: Fetch deps
          working_directory: /tmp
          command: |-
            mkdir -p ${GOBIN}
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            sudo apt-get update -y && sudo apt-get install -y build-essential libssl-dev uuid-dev libgpgme11-dev squashfs-tools libseccomp-dev
      - run:
          name: Build and Install singularity
          command: |-
            cd $HOME/go/src/github.com/sylabs/singularity
            ./mconfig -p /usr/local
            make -j$(nproc) -C ./builddir all
            sudo make -C ./builddir install
      - run:
          name: Run integration tests
          command: |-
            cd $HOME/go/src/github.com/sylabs/singularity
            make -C ./builddir integration-test

workflows:
  version: 2
  build_and_test:
    jobs:
      - get_source
      - go1.10-stretch:
          requires:
            - get_source
      - go1.11-stretch:
          requires:
            - get_source
      - go1.11-alpine:
          requires:
            - get_source
      - go1.11-macos:
          requires:
            - get_source
      - unit_tests:
          requires:
            - get_source
      - integration_tests:
          requires:
            - get_source
          filters:
            branches:
              only: master
