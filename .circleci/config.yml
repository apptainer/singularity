version: 2.0

defaults: &defaults
  working_directory: /go/singularity

jobs:
  get_source:
    <<: *defaults
    docker:
      - image: sylabsio/golang:1.11.9-stretch
    steps:
      - checkout
      - persist_to_workspace:
          root: /go
          paths:
            - singularity

  cache_go_mod:
    <<: *defaults
    docker:
      - image: sylabsio/golang:1.11.9-stretch
    steps:
      - attach_workspace:
          at: /go
      - restore_cache:
          keys:
            - go-mod-{{ checksum "go.sum" }}
      - run:
          name: Check vendor/ module is up-to-date
          command: scripts/check-vendor
      - save_cache:
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - '/go/pkg/mod'

  go1.11.9-stretch:
    <<: *defaults
    docker:
      - image: sylabsio/golang:1.11.9-stretch
    steps:
      - attach_workspace:
          at: /go
      - run:
          name: Build Singularity
          command: |-
            ./mconfig -v -p /usr/local
            make -j$(nproc) -C ./builddir all
      - run:
          name: Check code
          command: |-
            make -j$(nproc) -C ./builddir check

  go1.11.9-alpine:
    <<: *defaults
    docker:
      - image: sylabsio/golang:1.11.9-alpine
    steps:
      - attach_workspace:
          at: /go
      - run:
          name: Build Singularity
          command: |-
            ./mconfig -v -p /usr/local
            make -j$(nproc) -C ./builddir all
      - run:
          name: Check code
          command: |-
            make -j$(nproc) -C ./builddir check

  go1.11-macos:
    macos:
      xcode: "10.2.0"
    working_directory: /Users/distiller/go/src/github.com/sylabs/singularity
    steps:
      - checkout
      - run:
          name: Setup environment
          command: |-
            echo 'export GOPATH=$HOME/go'        >> $BASH_ENV
            echo 'export PATH=$GOPATH/bin:$PATH' >> $BASH_ENV
      - run:
          name: Install dependencies
          command: brew install go
      - run:
          name: Build Singularity
          command: |-
            ./mconfig -v -p /usr/local
            make -j$(sysctl -n hw.logicalcpu) -C ./builddir all
      - run:
          name: Check code
          command: |-
            make -j$(sysctl -n hw.logicalcpu) -C ./builddir check

  unit_tests:
    machine: true
    steps:
      - attach_workspace:
          at: ~/go
      - run:
          name: Setup environment
          command: |-
            echo 'export GOPATH=$HOME/go' >> $BASH_ENV
            echo 'export GOROOT=/usr/local/go' >> $BASH_ENV
            echo 'export GOBIN=$HOME/go/bin' >> $BASH_ENV
            echo 'export PATH=$GOPATH/bin:$GOBIN:$GOROOT/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin' >> $BASH_ENV
      - run:
          name: Update Go to 1.11.6
          working_directory: /tmp
          command: |-
            wget https://dl.google.com/go/go1.11.6.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go
            sudo tar -C /usr/local -xzf go1.11.6.linux-amd64.tar.gz
            sudo ln -s /usr/local/go/bin/go /usr/local/bin/go
            sudo chown -R circleci:circleci ~/go
      - run:
         name: Wait until apt completion
         command: |-
           i=0 ; while fuser /var/lib/dpkg/lock > /dev/null 2>&1 ; do echo 'Waiting for dpkg lock...' ; let i=i+1 ; if test $i -ge 30 ; then echo 'Waiting for too long. Abort.' ; exit 1 ; fi ; sleep 1 ; done
      - run:
          name: Fetch deps
          working_directory: /tmp
          command: |-
            mkdir -p ${GOBIN}
            sudo apt-get update -y && sudo apt-get install -y build-essential libssl-dev uuid-dev libgpgme11-dev squashfs-tools libseccomp-dev
      - run:
          name: Build and Install Singularity
          command: |-
            cd $HOME/go/singularity
            ./mconfig -v -p /usr/local --without-network
            make -j$(nproc) -C ./builddir all
            sudo make -C ./builddir install
      - run:
          name: Run unit tests
          command: |-
            cd $HOME/go/singularity
            make -j$(nproc) -C ./builddir unit-test

  e2e_tests:
    machine: true
    steps:
      - attach_workspace:
          at: ~/go
      - run:
          name: Check changes
          command: |-
              printenv
              if [[ -z "$CIRCLE_COMPARE_URL" ]]; then
                  echo "CIRCLE_COMPARE_URL is required to get the git commit range, did circleci remove it?"
                  circleci step halt
              fi

              COMMIT_RANGE=$(echo "$CIRCLE_COMPARE_URL" | sed 's:^.*/compare/::g')

              echo "CIRCLE_BRANCH: $CIRCLE_BRANCH"
              echo "CIRCLE_COMPARE_URL: $CIRCLE_COMPARE_URL"
              echo "COMMIT_RANGE: $COMMIT_RANGE"

              # Skip tests if no there were no changes to e2e/ or vendor/ and the branch is not master
              if [[ ! $(git diff $COMMIT_RANGE --name-status | grep -e "^e2e" -e "^vendor") && "$CIRCLE_BRANCH" != "master" ]]; then
                  echo "Skipping e2e tests"
                  circleci step halt
              fi

      - run:
          name: Setup environment
          command: |-
            echo 'export GOPATH=$HOME/go' >> $BASH_ENV
            echo 'export GOROOT=/usr/local/go' >> $BASH_ENV
            echo 'export GOBIN=$HOME/go/bin' >> $BASH_ENV
            echo 'export SINGULARITY_E2E=1' >> $BASH_ENV
            echo 'export PATH=$GOPATH/bin:$GOBIN:$GOROOT/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin' >> $BASH_ENV
      - run:
          name: Update Go to 1.11.6
          working_directory: /tmp
          command: |-
            wget https://dl.google.com/go/go1.11.6.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go
            sudo tar -C /usr/local -xzf go1.11.6.linux-amd64.tar.gz
            sudo ln -s /usr/local/go/bin/go /usr/local/bin/go
            sudo chown -R circleci:circleci ~/go
      - run:
         name: Wait until apt completion
         command: |-
           i=0 ; while fuser /var/lib/dpkg/lock > /dev/null 2>&1 ; do echo 'Waiting for dpkg lock...' ; let i=i+1 ; if test $i -ge 30 ; then echo 'Waiting for too long. Abort.' ; exit 1 ; fi ; sleep 1 ; done
      - run:
          name: Fetch deps
          working_directory: /tmp
          command: |-
            mkdir -p ${GOBIN}
            sudo apt-get update -y && sudo apt-get install -y build-essential libssl-dev uuid-dev libgpgme11-dev squashfs-tools libseccomp-dev
      - run:
          name: Build and Install singularity
          command: |-
            cd $HOME/go/singularity
            ./mconfig -v -p /usr/local
            make -j$(nproc) -C ./builddir all
            sudo make -C ./builddir install
      - run:
          name: Run E2E tests
          command: |-
            cd $HOME/go/singularity
            make -C ./builddir integration-test e2e-test

workflows:
  version: 2
  build_and_test:
    jobs:
      - get_source
      - cache_go_mod:
          requires:
            - get_source
      - go1.11.9-stretch:
          requires:
            - cache_go_mod
      - go1.11.9-alpine:
          requires:
            - cache_go_mod
      - go1.11-macos:
          requires:
            - get_source
      - unit_tests:
          requires:
            - get_source
      - e2e_tests:
          requires:
            - get_source
