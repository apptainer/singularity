singularity-container (2.6.0-1) unstable; urgency=high

  * Allow admin to specify a non-standard location for mksquashfs binary at
    build time with --with-mksquashfs option
  * --nv option will use nvidia-container-cli if installed
  * nvliblist.conf now has a section for binaries
  * --nv can be made default with all action commands in singularity.conf
  * --nv can be controlled by env vars $SINGULARITY_NV and
    $SINGULARITY_NV_OFF
  * Refactored travis build and packaging tests
  * Added build and packaging tests for Debian 8/9 and openSUSE 42.3/15.0
  * Restore shim init process for proper signal handling and child reaping when
    container is initiated in its own PID namespace 
  * Add -i option to image.create to specify the inode ratio.
  * Bind /dev/nvidia* into the container when the --nv flag is used in
    conjuction with the --contain flag
  * Add --no-home option to not mount user $HOME if it is not the $CWD and
    mount home = yes is set.
  * Added support for OAUTH2 Docker registries like Azure Container Registry
  * Fix 404 when using Arch Linux bootstrap
  * Fix environment variables clearing while starting instances
                    
 -- Gregory M. Kurtzer <gmkurtzer@gmail.com>  Fri, 3 Aug 2018 20:55:00 -0700

singularity-container (2.5.2-1) unstable; urgency=high

  * Removed the option to use overlay images with `singularity mount`.  This
  * flaw could allow a malicious user accessing the host system to access
  * sensitive information when coupled with persistent ext3 overlay.
  * Fixed a race condition that might allow a malicious user to bypass 
    directory
  * image restrictions, like mounting the host root filesystem as a container
  * image
  * Fix an error in malloc allocation #1620
  * Honor debug flag when pulling from docker hub #1556
  * Fix a bug with passwd abort #1580
  * Allow user to override singularity.conf "mount home = no" with --home 
    option
  * #1496
  * Improve debugging output #1535
  * Fix some bugs in bind mounting #1525
  * Define PR_(S|G)ET_NO_NEW_PRIVS in user space so that these features will
  * work with kernels that implement them (like Cray systems) #1506
  * Create /dev/fd and standard streams symlinks in /dev when using minimal dev
  * mount or when specifying -c/-C/--contain option #1420
  * Fixed * expansion during app runscript creation #1486

 -- Gregory M. Kurtzer <gmkurtzer@gmail.com>  Tue, 03 Jul 2018 11:37:00 -0700

singularity-container (2.5.1-1) unstable; urgency=high

  * Corrected a permissions error when attempting to run Singularity from a
  * directory on NFS with root_squash enabled
  * Fixed a bug that closed a socket early, preventing correct container
  * execution on hosts using identity services like SSSD
  * Fixed a regression that broke the debootstrap agent

 -- Gregory M. Kurtzer <gmkurtzer@gmail.com>  Mon, 19 Feb 2018 14:12:13 -0700

singularity-container (2.5.0-1) unstable; urgency=high

  * Prevent a user from creating world writable files in root-owned directories 
    on the host system by manipulating symbolic links and bind mounts 
  * Prevent a user from creating folders outside of the container by 
    manipulating symbolic links in conjunction with the `--nv` option or by 
    bypassing check_mounted function with relative symlinks
  * Prevent a user from bypassing the `enable overlay = no` option in the 
    `singularity.conf` configuration file by setting an environment variable
  * Prevent a user from exploiting buffer overflows in `src/util/daemon.c` 
    and/or `src/lib/image/ext3/init.c` (reported by Erik Sjölund (DBB, 
    Stockholm University, Sweden))
  * Prevent a user from forging  of the pid_path to join any Singularity 
    namespace (reported by Erik Sjölund (DBB, Stockholm University, Sweden))
  * Restore docker-extract aufs whiteout handling that implements correct
    extraction of docker container layers. This adds libarchive-devel as a
    build time dep. At runtime libarchive is needed for whiteout handling. If
    libarchive is not available at runtime will fall back to previous
    extraction method.
  * Changed behavior of SINGULARITYENV_PATH to overwrite container PATH and
    added SINGULARITYENV_PREPEND_PATH and SINGULARITYENV_APPEND_PATH for users
    wanting to prepend or append to the container PATH at runtime
  * Support pulls from the NVIDIA cloud docker registry (fix by Justin Riley, 
    Harvard)
  * Close socket file descriptors in fd_cleanup
  * Fix conflict between `--nv` and `--contain` options
  * Throw errors at build and runtime if NO_NEW_PRIVS is not present and working
  * Reset umask to 0022 at start to corrrect several errors
  * Verify docker layers after download with sha256 checksum
  * Do not make excessive requests for auth tokens to docker registries
  * Fixed stripping whitespaces and empty new lines for the app commands (fix by 
    Rafal Gumienny, Biozentrum, Basel)
  * Improved the way that working directory is mounted 
  * Fixed an out of bounds array in src/lib/image/ext3/init.c

 -- Gregory M. Kurtzer <gmkurtzer@gmail.com>  Mon, 19 Feb 2018 14:12:13 -0700

singularity-container (2.4.6-1) unstable; urgency=high

  * Fix for check_mounted() to check parent directories #1436
  * Free strdupped temporary variable in joinpath #1438

 -- Gregory M. Kurtzer <gmkurtzer@gmail.com>  Mon, 19 Feb 2018 14:12:13 -0700

singularity-container (2.4.5-1) unstable; urgency=high

  * Strip authorization header on http redirect to different domain when
    interacting with docker registries.

 -- Gregory M. Kurtzer <gmkurtzer@gmail.com>  Mon, 19 Feb 2018 14:12:13 -0700

singularity-container (2.4.4-1) unstable; urgency=high

  * This is point release to correct an error with the last point release.  
  * Removed capability to handle docker layer aufs whiteout files correctly as
    it increased potential attack surface on some distros (with apologies to
    users who requestd it).

 -- Gregory M. Kurtzer <gmkurtzer@gmail.com>  Mon, 19 Feb 2018 14:12:13 -0700

singularity-container (2.4.3-1) unstable; urgency=high

  * This is a bug fix point release to the 2.4 feature branch. It includes
    several fixes including some pertaining to a medium-level security issue on
    older kernels.
  * Fix permission denied when binding directory located on NFS 
    with root_squash enabled
  * Add capability to support all tar compression formats
  * Handle docker layer aufs whiteout files correctly (requires libarchive)
  * Close file descriptors pointing to a directory
  * Updated output of image.print command
  * Fixed parsing of backslashes in apprun script
  * Fixed parsing of arch keyword from definition file
  * Fixed incompatibility between --pwd and --contain options
  * Updated license information

 -- Gregory M. Kurtzer <gmkurtzer@gmail.com>  Mon, 19 Feb 2018 14:12:13 -0700

singularity-container (2.4.2-1) unstable; urgency=high

  * This fixed an issue for support of older distributions and kernels with regards to `setns()`
    functionality.
  * Fixed autofs bug path (lost during merge)

 -- Gregory M. Kurtzer <gmkurtzer@gmail.com>  Wed, 22 Nov 2017 12:20:27 -0700

singularity-container (2.4.1-1) unstable; urgency=high

  * This is a bug fix point release to the 2.4 feature branch, and includes a
    number of fixes including some security related points that deserve
    immediate attention

 -- Gregory M. Kurtzer <gmkurtzer@gmail.com>  Wed, 22 Nov 2017 12:20:27 -0700

singularity-container (2.4-1) unstable; urgency=low

  * Building an image is now more intuitive with the introduction of our build
    command. You don't need to worry about sizes or using create, or bootstrap
  * By default the build command now creates compressed read only containers
    using squashfs
  * Singularity now supports building additional base targets: local images,
    Singularity Hub, or the host operating system itself
  * A well documented solution for internal container modularity
    (http://containers-ftw.org/SCI-F/)
  * By popular demand and bribery, we are bringing back persistent instance
    support. You can now start up a container instance and using a given name,
    you can connect to that instance, and it keeps running even when you exit!
  * We are now using the network namespace to provide network isolation
  * Using a persistent overlay, you can modify a container image and all
    changes are written to the overlay layer
  * Cleanup and optimization of the Singularity image library

 -- Gregory M. Kurtzer <gmkurtzer@gmail.com>  Wed, 11 Oct 2017 19:39:19 -0700

singularity-container (2.3.2-1) unstable; urgency=high

  * Fix for a change that Docker implemented to their registry RESTful API
    which broke compatibility with Singularity
  * Several other low minor fixes

 -- Gregory M. Kurtzer <gmkurtzer@gmail.com>  Fri, 15 Sep 2017 14:36:34 -0700

singularity-container (2.3.1-1) unstable; urgency=high

  * Fix for a High Severity security issue on older hosts
  * Other improvements and fixes to previous versions of Singularity

 -- Gregory M. Kurtzer <gmkurtzer@gmail.com>  Mon, 26 Jun 2017 11:24:12 -0700

singularity-container (2.3-1) unstable; urgency=low

  * Lots of backend library changes to accommodate a more flexible API
  * Restructured Python backend
  * Updated bootstrap backend to make it much more reliable
  * Direct support for the awesome, the fantastic, Singularity-Hub!
  * Ability to run additional commands without root privileges (e.g. create,
    import, copy, export, etc..).
  * Added ability to pull images from Singularity Hub and Docker
  * Containers now have labels, and are inspect'able

 -- Gregory M. Kurtzer <gmkurtzer@gmail.com>  Wed, 31 May 2017 18:19:46 -0700

singularity-container (2.2-1) unstable; urgency=low

  * New upstream release
  * Install sexec-suid as suid instead of sexec

 -- Roland Fehrenbacher <rf@q-leap.de>  Fri, 21 Oct 2016 13:25:06 +0200

singularity-container (2.0-1) UNRELEASED; urgency=medium

  * New upstream release
  * Initial Debian packaging

 -- Dave Love <fx@gnu.org>  Thu, 02 Jun 2016 22:48:28 +0100

singularity-container (1.0-1) UNRELEASED; urgency=low

  * Initial release

 -- Dave Love <fx@gnu.org>  Sun, 17 Apr 2016 12:22:41 +0100
